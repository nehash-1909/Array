#include <bits/stdc++.h>
using namespace std;

int main() {
	
	int T;
	cin >> T;
	
	while(T--){
	    
	    
	    
	    int N, M;
	    cin >>N >> M;
	    
	    int arr1[N];
	    int arr2[M];
	    
	    for(int i = 0;i<N;i++){
	        cin >> arr1[i];
	    }
	    
	    for(int i = 0;i<M;i++){
	        cin >> arr2[i];
	    }
	    
	    findUnion(arr1,arr2, N, M);
	    
	    cout << endl;
	    
	}
	
	return 0;
}


void findUnion(int arr1[], int arr2[], int n, int m)
{
    int arr3[n+m];
    int a1=0;
    int a2=0;
    int a3=0;
  while(a1<n&&a2<m)
    {
        if(arr1[a1]<arr2[a2])
        {
            if(arr1[a1]!=arr1[a1-1])
            {
            arr3[a3++]=arr1[a1];}
            a1++;
        }
        else if(arr1[a1]>arr2[a2])
        {
                 if(arr2[a2]!=arr2[a2-1])
            {
            arr3[a3++]=arr2[a2];
                
            }
            
            a2++;
        }
        else
        {
                         if(arr2[a2]!=arr2[a2-1])
            {
                      if(arr1[a1]!=arr1[a1-1])
            {
                arr3[a3++]=arr2[a2];}}
            a2++;
            a1++;
        }
    }
    if(a1<n)
    {
        
           for(;a1<n;a1++)
        {
         if(arr1[a1]!=arr1[a1-1])
            {
     
               arr3[a3++]=arr1[a1];
        }
            }
    }
    if(a2<m)
    {
                for(;a2<m;a2++)
        {
                        if(arr2[a2]!=arr2[a2-1])
            {

            
               arr3[a3++]=arr2[a2];
        }
            }
    }
    for(int i=0;i<a3;i++)
    {
        cout<<arr3[i]<<" ";
    }
    
}
